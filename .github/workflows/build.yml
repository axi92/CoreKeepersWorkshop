name: Build CoreKeepersWorkshop

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  buildRelease:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Get version from AssemblyInfo.cs
      id: get_version
      run: |
        $content = Get-Content "src/CoreKeeperInventoryEditor/Properties/AssemblyInfo.cs"
        $versionLine = $content | Where-Object { $_ -match '\[assembly: AssemblyFileVersion\("(.+?)"\)\]' }
        if ($versionLine -match '\("(.+?)"\)') {
          $version = $matches[1]
          echo "Version extracted: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT
        } else {
          Write-Error "Could not find version in AssemblyInfo.cs"
          exit 1
        }
    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v2
    - name: Restore NuGet packages with MSBuild
      run: msbuild .\src\CoreKeeperInventoryEditor.sln -t:Restore
    ####################
    ## RELEASE BUILD
    ####################
    - name: Build CKW (Release)
      run: msbuild .\src\CoreKeeperInventoryEditor.sln /p:Configuration=Release /p:Platform=x64
    - name: Prepare Release Output
      run: |
        $releaseFolder = ".\release\CoreKeeperInventoryEditor-Release-${{ steps.get_version.outputs.version }}"
        if (Test-Path $releaseFolder) { Remove-Item $releaseFolder -Recurse -Force }
        New-Item -ItemType Directory -Path $releaseFolder
        Copy-Item -Path ".\src\CoreKeeperInventoryEditor\bin\x64\Release\*" -Destination $releaseFolder -Recurse -Force
        Get-ChildItem -Path $releaseFolder -Recurse -Include *.xml, *.pdb, *.config | Remove-Item -Force
        Compress-Archive -Path "$releaseFolder\*" -DestinationPath ".\CoreKeeperInventoryEditor-Release-${{ steps.get_version.outputs.version }}.zip"
    - name: Upload Release Artifact
      uses: actions/upload-artifact@v4
      with:
        name: CoreKeeperInventoryEditor-Release-${{ steps.get_version.outputs.version }}
        path: .\CoreKeeperInventoryEditor-Release-${{ steps.get_version.outputs.version }}.zip
  buildDebug:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Get version from AssemblyInfo.cs
      id: get_version
      run: |
        $content = Get-Content "src/CoreKeeperInventoryEditor/Properties/AssemblyInfo.cs"
        $versionLine = $content | Where-Object { $_ -match '\[assembly: AssemblyFileVersion\("(.+?)"\)\]' }
        if ($versionLine -match '\("(.+?)"\)') {
          $version = $matches[1]
          echo "Version extracted: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT
        } else {
          Write-Error "Could not find version in AssemblyInfo.cs"
          exit 1
        }
    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v2
    - name: Restore NuGet packages with MSBuild
      run: msbuild .\src\CoreKeeperInventoryEditor.sln -t:Restore
    ####################
    ## DEBUG BUILD
    ####################
    - name: Build CKW (Debug)
      run: msbuild .\src\CoreKeeperInventoryEditor.sln /p:Configuration=Debug /p:Platform=x64
    - name: Prepare Debug Output
      run: |
        $debugFolder = ".\release\CoreKeeperInventoryEditor-Debug-${{ steps.get_version.outputs.version }}"
        if (Test-Path $debugFolder) { Remove-Item $debugFolder -Recurse -Force }
        New-Item -ItemType Directory -Path $debugFolder
        Copy-Item -Path ".\src\CoreKeeperInventoryEditor\bin\x64\Debug\*" -Destination $debugFolder -Recurse -Force
        Get-ChildItem -Path $debugFolder -Recurse -Include *.xml, *.config | Remove-Item -Force
        Compress-Archive -Path "$debugFolder\*" -DestinationPath ".\CoreKeeperInventoryEditor-Debug-${{ steps.get_version.outputs.version }}.zip"
    - name: Upload Debug Artifact
      uses: actions/upload-artifact@v4
      with:
        name: CoreKeeperInventoryEditor-Debug-${{ steps.get_version.outputs.version }}
        path: .\CoreKeeperInventoryEditor-Debug-${{ steps.get_version.outputs.version }}.zip